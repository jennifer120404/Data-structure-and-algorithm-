class Solution(object):
    def solve(self, board):
        """
        save the number of rows and the cols
        create a function for DFS 
            check condtion is not meet return 
            set the block to T which mean it is connect to a O 
            and then do it for the four block around 

        for loop rows and cols 
            if found a element that is O put the element in dfs

            converting the not marked element to X
            anf all the T marked element to O
        """
        rows = len(board)
        cols = len(board[0])

        def capture(r, c):
            if r < 0 or c < 0 or r >= rows or c >= cols or board[r][c] != "O":
                return 
            board[r][c] = "T"
            capture(r+1, c)
            capture(r-1, c)
            capture(r, c+1)
            capture(r, c-1)

        for r in range(rows):
            for c in range(cols):
                if board[r][c] == "O" and (r in [0, rows - 1] or c in [0, cols - 1]):
                    capture(r, c)

        for r in range(rows):
            for c in range(cols):
                if board[r][c] == "O":
                    board[r][c] = "X"

        for r in range(rows):
            for c in range(cols):
                if board[r][c] == "T":
                    board[r][c] = "O"
