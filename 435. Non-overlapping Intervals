class Solution:
    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:
        '''
         Sort the intervals based on their end time.
         Initialize the end time of the first interval.
         Iterate through the rest of the intervals.
            If the start time of the current interval is less than the end time of the previous interval,
                t means there is an overlap, so we increment the count.
            Update the end time to the end of the current interval.
            '''
        intervals.sort(key=lambda x: x[1])
        print (intervals)


        end = intervals[0][1]
        count = 0
        
        for i in range(1, len(intervals)):
           
            if intervals[i][0] < end:
                count += 1
            else:

                end = intervals[i][1]

        return count
